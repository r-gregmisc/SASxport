\section{Results}

%% \begin{verbatim}
%% $Id$
%% \end{verbatim}

All three algorithms converged to similar distributions and produced
essentially the same metabolic pathway model.  The marginal
distributions for the parameters were mound-shaped
(Figure~\ref{densities}), were skewed to the right and had thicker
tails than normal distributions.

\SweaveInput{figure4}


The effect of the number of data points within a fixed time window on
the parameter distributions can be seen in Figure~\ref{converged}.
%
\SweaveInput{figure5}
%
We see some improved precision as the number of
points increases from 16 to 25 but it is not pronounced. Overall, the
reduction in width varied from 18-fold for $d_9$ and 9-fold for $d_1$
to 1.5-fold for $d_4$.  Figure~\ref{scatter} is an example of a
bivariate scatterplot of the distributions. There is strong
correlation between some pairs of parameters, e.g., $d_1$ -- $d_2$,
but no evidence of multi-modality.
\SweaveInput{figure6}

The value of the posterior probability density for inference was
assessed graphically. The posterior density was used to find the
maximum posterior density estimate for the model parameters and the
95\% credible intervals. The fits of the resulting models to the
16-point data set is shown in Figure~\ref{fits}. Quantitative measures
of the fits for
%
\SweaveInput{figure7}
%
all the algorithms are given in Table~\ref{MSq}.  
%
\SweaveInput{table2}
%
These measures of model fit
could be used to compare the usefulness of different models though we
have not done this for this paper.

Rates of convergence are illustrated in Figure~\ref{SSQvsIter}. The
\SweaveInput{figure8}
mean sums of squared residuals (SSQ) are plotted vs. the number of
likelihood evaluations for the three algorithms.  The relatively 
long convergence time for the 1-component Metropolis algorithm is a result 
of the high correlations between some of the parameters (Figure~\ref{scatter}).
With the 1-component Metropolis algorithm, one parameter is
updated for each evaluation of the likelihood method, i.e., the algorithm 
searches the parameter space by moving parallel to the axes and thus 
it samples a density with a diagonal axis of symmetry very slowly. 
This is not a problem with the all-component Metropolis and NKC 
algorithms since they update all the parameters at each iteration.

We performed all MCMC runs on on a 3.2GHz P4 machine with 1GB of
memory.  The 1-component algorithm required 1--2 hours to achieve
appropriate estimates, while only 1 minute was required for the
all-components and Normal Kernel Coupler algorithms.
