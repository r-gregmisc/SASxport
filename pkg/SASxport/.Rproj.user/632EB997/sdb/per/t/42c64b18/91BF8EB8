{
    "collab_server" : "",
    "contents" : "\\name{write.xport}\n\\alias{write.xport}\n\\title{Write Data to a SAS XPORT File}\n\\description{\n  This function writes one or more data frames into a SAS XPORT format\n  library file.\n}\n\\usage{\nwrite.xport(...,\n            list=base::list(),\n            file = stop(\"'file' must be specified\"),\n            verbose=FALSE,\n            sasVer=\"7.00\",\n            osType,\n            cDate=Sys.time(),\n            formats=NULL,\n            autogen.formats=TRUE\n )\n}\n\\arguments{\n  \\item{\\dots}{One or more data frames to be stored}\n  \\item{list}{A list containing data frames to be stored.}\n  \\item{file}{File name or connection object. Use \"\" to view the raw data}\n  \\item{verbose}{Logical flag controlling whether status is reported\n    during processing}\n  \\item{sasVer}{SAS version string}\n  \\item{osType}{Opererating system, defaults to \"R X.Y.Z\" for\n    appropriate values of X, Y, and Z}\n  \\item{cDate}{Date object specifying dataset creation date}\n  \\item{formats}{Optional data frame containing SAS format information.}\n  \\item{autogen.formats}{Logical indiciating whether SAS formats should be\n    auto-generated for factor variables.}\n}\n\\details{\n  The function creates a SAS XPORT data file (see reference) from one or\n  more data frames.  This file format imposes a number of constraints:\n  \\itemize{\n    \\item Data set and variable names are truncated to 8 characters and\n      converted to upper case.  All characters outside of the set A-Z,\n      0-9, and '\\_' are converted to '\\_'.\n    \\item Character variables are stored as characters.\n    \\item If \\code{autogen.formats=TRUE} (the default), factor variables\n      are stored as numeric with an appropriate SAS format\n      specification. If \\code{autogen.formats=FALSE}, factor variables\n      are stored as characters.\n    \\item All numeric variables are stored as double-precision floating\n      point values utilizing the IBM mainframe double precision floating\n      point format (see the reference).\n    \\item Date and time variables are either converted to number of days since\n      1960-01-01 (date only), or number of seconds since\n      1960-01-01:00:00:00 GMT (date-time variables).\n    \\item Missing values are converted to the standard SAS missing value\n      '.'\n  }\n\n  The SAS XPORT format allows each dataset to have a label and a type\n  (set via the \\code{\\link{label}} and \\code{\\link{SAStype}} functions).\n  In addition, each variable may have a corresponding label, display\n  format, and input format.  To set these values, add the attribute\n  'label', 'SASformat', or 'SASiformat' to individual data frame.  These\n  attributes may be set using the \\code{\\link{label}},\n  \\code{\\link{SASformat}}, and \\code{\\link{SASiformat}} functions. (See\n  examples provided below.)\n\n  The actual translation of R objects to objects appropriate for SAS is\n  handled by the \\code{\\link{toSAS}} generic and associated methods,\n  which can be (re)defined by the user to provide fine-grained control.\n}\n\\value{\n  No return value\n}\n\\references{\n  SAS Technical Support document TS-140: ``The Record Layout of a\n  Data Set in SAS Transport (XPORT) Format'' available at\n  \\url{https://support.sas.com/techsup/technote/ts140.pdf}.\n}\n\\author{Gregory R. Warnes \\email{greg@warnes.net}}\n\\note{\n   This package was created with partial funding by Metrum Institute\n   \\url{http://metruminstitute.org}.\n}\n\\seealso{\n  \\code{\\link{toSAS}},\n  \\code{\\link{lookup.xport}},\n  \\code{\\link{read.xport}},\n  \\code{\\link{label}},\n  \\code{\\link{SAStype}},\n  \\code{\\link{SASformat}},\n  and \\code{\\link{SASiformat}}\n}\n\\examples{\n\n#####\n## R version of the example given in TS-140\n#####\n\n## manually create a data set\nabc <- data.frame( x=c(1, 2, NA, NA ), y=c('a', 'B', NA, '*' ) )\n\n## look at it\nabc\n\n## add a format specifier (not used by R)\nSASformat(abc$x) <- 'date7.'\n\n## add a variable label (not used by R)\nlabel(abc$y) <- 'character variable'\n\n## add a dataset label and type\nlabel(abc) <- 'Simple example'\nSAStype(abc) <- 'MYTYPE'\n\n## verify the additions\nstr(abc)\n\n# create a SAS XPORT file\nwrite.xport( abc, file=\"xxx.dat\" )\n\n# list the contents of the file\nlookup.xport(\"xxx.dat\")\n\n## reload the data\nxxx.abc <- read.xport(\"xxx.dat\")\n\n## and look at it\nxxx.abc\n\n## Check the label and type\nlabel(xxx.abc)\nSAStype(xxx.abc)\n\n## Note that the variable names and SAS dataset type have been converted\n## to uppercase\n\n}\n\\keyword{file}\n",
    "created" : 1458944642352.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4280707758",
    "id" : "91BF8EB8",
    "lastKnownWriteTime" : 1458944650,
    "last_content_update" : 1458944650962,
    "path" : "~/src/r-gregmisc/SASxport/man/write.xport.Rd",
    "project_path" : "man/write.xport.Rd",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_doc"
}