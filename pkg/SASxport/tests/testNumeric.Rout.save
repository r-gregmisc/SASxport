
R version 3.1.0 Patched (2014-05-26 r65771) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(SASxport)
Loading required package: chron
Loading required package: Hmisc
Loading required package: grid
Loading required package: lattice
Loading required package: survival
Loading required package: splines
Loading required package: Formula

Attaching package: 'Hmisc'

The following objects are masked from 'package:base':

    format.pval, round.POSIXt, trunc.POSIXt, units


Loaded SASxport version 1.5.0 (2014-07-21).

  Type `?SASxport' for usage information.

> Sys.setenv("TZ"="GMT")
> 
> ##
> ## Construct a data frame with all common R data types.
> ## For each, include NA, min, max, and 3 sample values
> ##
> 
> ints <- as.integer  ( c(NA, .Machine$integer.max, -.Machine$integer.max, -123456,  0, +123456 ) )
> dbls <- as.numeric  ( c(NA, .Machine$double.xmin, .Machine$double.xmax,  -123.456, 0, +123.456) )
> char <- as.character( c(NA, '', paste(letters,LETTERS,sep="",collapse=''), '-123456', '', '+123456') )
> factor <- factor    ( c(NA, '', 'Z', 'AA', '', 'ZZ' ) )
> 
> # this gets properly handled
> df <- data.frame(ints, dbls, char, factor) 
> write.xport(df, file='testNumeric.xpt')
Warning messages:
1: In xport.numeric(val) : IBM exponent overflow, generating NA
2: In xport.numeric(val) : IBM exponent overflow, generating NA
> df.2 <- read.xport(file='testNumeric.xpt')
> 
> stopifnot( all(df == df.2, na.rm=TRUE) )
> df.2
         INTS     DBLS                                                 CHAR
1          NA       NA                                                 <NA>
2  2147483647       NA                                                     
3 -2147483647       NA aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ
4     -123456 -123.456                                              -123456
5           0    0.000                                                     
6      123456  123.456                                              +123456
  FACTOR
1   <NA>
2       
3      Z
4     AA
5       
6     ZZ
> 
> # this gets properly handled
> df <- data.frame(ints, dbls, char, factor, stringsAsFactors=FALSE) 
> write.xport(df, file='testNumeric.xpt')
Warning messages:
1: In xport.numeric(val) : IBM exponent overflow, generating NA
2: In xport.numeric(val) : IBM exponent overflow, generating NA
> df.2 <- read.xport(file='testNumeric.xpt')
> 
> 
> stopifnot(all(df==df.2,na.rm=TRUE))
> df.2
         INTS     DBLS                                                 CHAR
1          NA       NA                                                 <NA>
2  2147483647       NA                                                 <NA>
3 -2147483647       NA aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ
4     -123456 -123.456                                              -123456
5           0    0.000                                                 <NA>
6      123456  123.456                                              +123456
  FACTOR
1   <NA>
2       
3      Z
4     AA
5       
6     ZZ
> 
> 
> proc.time()
   user  system elapsed 
  0.603   0.035   0.631 
